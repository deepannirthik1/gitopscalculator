# This workflow will build a package using Maven and then publish it to GitHub packages when a release is created
# For more information see: https://github.com/actions/setup-java/blob/main/docs/advanced-usage.md#apache-maven-with-a-settings-path

name: Maven Package

on:
  push:
    branches: [master]

jobs:
  Setup:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 1.8
      uses: actions/setup-java@v3
      with:
        distribution: 'temurin'
        java-version: 17
    - name: Maven - Clean Job
      run: mvn -B clean --file pom.xml
      
  Compile:
    runs-on: ubuntu-latest
    needs: Setup
    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 1.8
      uses: actions/setup-java@v3
      with:
        distribution: 'temurin'
        java-version: 17
    - name: Maven - Clean Job
      run: mvn -B compile --file pom.xml

  StaticAnlaysis:
    runs-on: ubuntu-latest
    needs: Compile
    steps:
     - uses: actions/checkout@v3
       with:
         fetch-depth: 0
     - name: Set up JDK 11
       uses: actions/setup-java@v3
       with:
        distribution: 'temurin'
        java-version: 17
     - name: Cache SonarCloud packages
       uses: actions/cache@v3
       with:
         path: ~/.sonar/cache
         key: ${{ runner.os }}-sonar
         restore-keys: $	{{ runner.os }}-sonar
     - name: Cache Maven packages
       uses: actions/cache@v3
       with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashfiles('**/pom.xml') }}
        restore-keys: $	{{ runner.os }}-m2
     - name: Build and analyze
       env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
       run: mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dsonar.projectKey=deepannirthik1_gitopscalculator
 
  UnitTesting:
      runs-on: ubuntu-latest
      needs: StaticAnlaysis
      name: Unit Testing
      steps:
        - run: echo should run unit tests.
        - name: Checkout Code
          uses: actions/checkout@v3
        - name: Build and Run Tests
          run: mvn -B test --file pom.xml
        - name: Publish Unit Test Results
          uses: mikepenz/action-junit-report@v3
          if: success() || failure()
          # uses: EnricoMi/publish-unit-test-result-action@v2
          with:
            files: "target/surefire-reports/*.xml"

  CodeCoverage:
    runs-on: ubuntu-latest
    needs: UnitTesting
    name: Code Coverage
    steps: 
      - run: echo should run code coverage
      - name: Checkout Code
        uses: actions/checkout@v3
      - name: Build and Run Tests
        run: mvn -X org.jacoco:jacoco-maven-plugin:report

  War:
      runs-on: ubuntu-latest
      needs: CodeCoverage
      name: War
      steps: 
        - run: echo should packaging war
        - name: Checkout Code
          uses: actions/checkout@v3
        - name: War packaging
          run: mvn -X war:war

  PubishPackage:
    runs-on: ubuntu-latest
    needs: War
    name: Publish package to the Github
    steps: 
      - uses: actions/checkout@v3
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          server-id: github
          settings-path: ${{ github.workspace }}
      - name: Build with Maven
        run: mvn -B package --file pom.xml
      - name: Publish to Github Packages Apache Maven
        run: mvn install -s settings.xml
        env:
          GITHUB_TOKEN: ${{ github.token }}

  docker:
    name: Publish - Docker Hub
    needs: War
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repo
        uses: actions/checkout@v3
      - name: Push to Docker Hub
        uses: docker/build-push-action@v5
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          repository: ${{ secrets.DOCKER_REPO }}
          tag_with_ref: true     

  PushDockerImage_GitHubPackages:
      name: Push Docker image to GitHub Packages
      needs: docker
      runs-on: ubuntu-latest
      steps:
        - name: Check out the repo
          uses: actions/checkout@v3
        - name: Push to GitHub Packages
          uses: docker/build-push-action@v5
          with:
            username: ${{ github.actor }}
            password: ${{ secrets.GITHUB_TOKEN }}
            registry: docker.pkg.github.com
            repository: ${{ secrets.DOCKER_REPO }}
            tag_with_ref: true 
